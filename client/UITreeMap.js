/// <reference path="../../Video/typescript-defs/all-definitions.d.ts"/>
class UITreeMap extends UIComplexComponent {
    constructor(properties = null) {
        super(properties);
        this.headerTemplate = "#name#";
        this.valueTemplate = "#value#";
        this.activeItem = false;
        this.subRender = false;
    }
    static OnItemClick(id) {
        var theComponentID = this["config"].id;
        if (!$$(theComponentID))
            return;
        var theComponent = $$(theComponentID)["component"];
        theComponent.onItemClick(id);
    }
    listen(event, data, caller) {
        switch (event) {
            case "eventName":
            default:
                UI.Info(event);
                break;
        }
    }
    onItemClick(id) {
        this.publish("onItemClick", id);
    }
    getView() {
        this.componentView = this.createView({
            view: "treemap",
            id: this.componentID,
            value: this.valueTemplate,
            headerTemplate: this.headerTemplate,
            activeItem: this.activeItem,
            subRender: this.subRender,
            type: {
                cssClass: this.colorFunction
            }
        });
        return this.componentView;
    }
    initialize() {
        super.initialize();
        super.defineEvents();
        this.defineEvents();
    }
    defineEvents() {
        if ($$(this.componentID)) {
            $$(this.componentID).attachEvent("onItemClick", UITreeMap.OnItemClick);
        }
    }
    show() {
        this.popup = new UIPopupWindow("Component Label ");
        this.popup.show(this);
    }
}
this.UITreeMap = UITreeMap;
Factory.AddStringToClass("UITreeMap", UITreeMap);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlUcmVlTWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlUcmVlTWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdFQUF3RTtBQU14RSx3QkFBd0Isa0JBQWtCO0lBZ0J6QyxZQUFZLFVBQVUsR0FBTyxJQUFJO1FBQ2hDLE1BQU0sVUFBVSxDQUFDLENBQUM7UUFiWixtQkFBYyxHQUFPLFFBQVEsQ0FBQztRQUM5QixrQkFBYSxHQUFRLFNBQVMsQ0FBQztRQUMvQixlQUFVLEdBQVcsS0FBSyxDQUFDO1FBQzNCLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFXbEMsQ0FBQztJQVRELE9BQWMsV0FBVyxDQUFDLEVBQVM7UUFDbEMsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUN2QyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQztRQUNoQyxJQUFJLFlBQVksR0FBZSxFQUFFLENBQUMsY0FBYyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDL0QsWUFBWSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBTU0sTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTTtRQUNoQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2YsS0FBSyxXQUFXLENBQUM7WUFDakI7Z0JBQ0MsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDZixLQUFLLENBQUM7UUFDUixDQUFDO0lBQ0YsQ0FBQztJQUVNLFdBQVcsQ0FBQyxFQUFNO1FBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFTSxPQUFPO1FBQ2IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBQ3BDLElBQUksRUFBWSxTQUFTO1lBQ3pCLEVBQUUsRUFBYyxJQUFJLENBQUMsV0FBVztZQUNoQyxLQUFLLEVBQVcsSUFBSSxDQUFDLGFBQWE7WUFDbEMsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO1lBQ25DLFVBQVUsRUFBTSxJQUFJLENBQUMsVUFBVTtZQUMvQixTQUFTLEVBQU8sSUFBSSxDQUFDLFNBQVM7WUFDOUIsSUFBSSxFQUFZO2dCQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsYUFBYTthQUM1QjtTQUNELENBQUMsQ0FBQTtRQUNGLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzNCLENBQUM7SUFFTSxVQUFVO1FBQ2hCLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNuQixLQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxZQUFZO1FBQ2xCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsV0FBVyxDQUFDLGFBQWEsRUFBRSxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDeEUsQ0FBQztJQUNGLENBQUM7SUFFTSxJQUFJO1FBQ1YsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7QUFDRixDQUFDO0FBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDM0IsT0FBTyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi9WaWRlby90eXBlc2NyaXB0LWRlZnMvYWxsLWRlZmluaXRpb25zLmQudHNcIi8+XG5cblxuaW50ZXJmYWNlIENvbG9yRnVuY3Rpb24ge1xuXHQob2JqZWN0OmFueSkgOiBzdHJpbmc7XG59XG5jbGFzcyBVSVRyZWVNYXAgZXh0ZW5kcyBVSUNvbXBsZXhDb21wb25lbnQge1xuXHRwdWJsaWMgcG9wdXA6VUlQb3B1cFdpbmRvdztcblx0cHVibGljIHRyZWVNYXA6QXJyYXk8YW55Pjtcblx0cHVibGljIGNvbG9yRnVuY3Rpb246Q29sb3JGdW5jdGlvbjtcblx0cHVibGljIGhlYWRlclRlbXBsYXRlICAgICA9IFwiI25hbWUjXCI7XG5cdHB1YmxpYyB2YWx1ZVRlbXBsYXRlICAgICAgPSBcIiN2YWx1ZSNcIjtcblx0cHVibGljIGFjdGl2ZUl0ZW06Ym9vbGVhbiA9IGZhbHNlO1xuXHRwdWJsaWMgc3ViUmVuZGVyOmJvb2xlYW4gID0gZmFsc2U7XG5cblx0cHVibGljIHN0YXRpYyBPbkl0ZW1DbGljayhpZDpzdHJpbmcpIHtcblx0XHR2YXIgdGhlQ29tcG9uZW50SUQgPSB0aGlzW1wiY29uZmlnXCJdLmlkO1xuXHRcdGlmICghJCQodGhlQ29tcG9uZW50SUQpKSByZXR1cm47XG5cdFx0dmFyIHRoZUNvbXBvbmVudCA9IDxVSVRyZWVNYXA+ICQkKHRoZUNvbXBvbmVudElEKVtcImNvbXBvbmVudFwiXTtcblx0XHR0aGVDb21wb25lbnQub25JdGVtQ2xpY2soaWQpO1xuXHR9XG5cblx0Y29uc3RydWN0b3IocHJvcGVydGllczphbnkgPSBudWxsKSB7XG5cdFx0c3VwZXIocHJvcGVydGllcyk7XG5cdH1cblxuXHRwdWJsaWMgbGlzdGVuKGV2ZW50LCBkYXRhLCBjYWxsZXIpIHtcblx0XHRzd2l0Y2ggKGV2ZW50KSB7XG5cdFx0XHRjYXNlIFwiZXZlbnROYW1lXCI6XG5cdFx0XHRkZWZhdWx0IDpcblx0XHRcdFx0VUkuSW5mbyhldmVudCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBvbkl0ZW1DbGljayhpZDphbnkpIHtcblx0XHR0aGlzLnB1Ymxpc2goXCJvbkl0ZW1DbGlja1wiLCBpZCk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0VmlldygpOmFueSB7XG5cdFx0dGhpcy5jb21wb25lbnRWaWV3ID0gdGhpcy5jcmVhdGVWaWV3KHtcblx0XHRcdHZpZXcgICAgICAgICAgOiBcInRyZWVtYXBcIixcblx0XHRcdGlkICAgICAgICAgICAgOiB0aGlzLmNvbXBvbmVudElELFxuXHRcdFx0dmFsdWUgICAgICAgICA6IHRoaXMudmFsdWVUZW1wbGF0ZSxcblx0XHRcdGhlYWRlclRlbXBsYXRlOiB0aGlzLmhlYWRlclRlbXBsYXRlLFxuXHRcdFx0YWN0aXZlSXRlbSAgICA6IHRoaXMuYWN0aXZlSXRlbSxcblx0XHRcdHN1YlJlbmRlciAgICAgOiB0aGlzLnN1YlJlbmRlcixcblx0XHRcdHR5cGUgICAgICAgICAgOiB7XG5cdFx0XHRcdGNzc0NsYXNzOiB0aGlzLmNvbG9yRnVuY3Rpb25cblx0XHRcdH1cblx0XHR9KVxuXHRcdHJldHVybiB0aGlzLmNvbXBvbmVudFZpZXc7XG5cdH1cblxuXHRwdWJsaWMgaW5pdGlhbGl6ZSgpIHtcblx0XHRzdXBlci5pbml0aWFsaXplKCk7XG5cdFx0c3VwZXIuZGVmaW5lRXZlbnRzKCk7XG5cdFx0dGhpcy5kZWZpbmVFdmVudHMoKTtcblx0fVxuXG5cdHB1YmxpYyBkZWZpbmVFdmVudHMoKSB7XG5cdFx0aWYgKCQkKHRoaXMuY29tcG9uZW50SUQpKSB7XG5cdFx0XHQkJCh0aGlzLmNvbXBvbmVudElEKS5hdHRhY2hFdmVudChcIm9uSXRlbUNsaWNrXCIsIFVJVHJlZU1hcC5Pbkl0ZW1DbGljayk7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIHNob3coKSB7XG5cdFx0dGhpcy5wb3B1cCA9IG5ldyBVSVBvcHVwV2luZG93KFwiQ29tcG9uZW50IExhYmVsIFwiKTtcblx0XHR0aGlzLnBvcHVwLnNob3codGhpcyk7XG5cdH1cbn1cbnRoaXMuVUlUcmVlTWFwID0gVUlUcmVlTWFwO1xuRmFjdG9yeS5BZGRTdHJpbmdUb0NsYXNzKFwiVUlUcmVlTWFwXCIsIFVJVHJlZU1hcCk7Il19